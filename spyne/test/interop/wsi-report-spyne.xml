<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="wsi-test-tools/common/xsl/report.xsl" type="text/xsl" ?>
<report name="WS-I Basic Profile Conformance Report."    timestamp="2014-06-20T13:58:19.778"
    xmlns="http://www.ws-i.org/testing/2004/07/report/"
    xmlns:wsi-report="http://www.ws-i.org/testing/2004/07/report/"
    xmlns:wsi-log="http://www.ws-i.org/testing/2003/03/log/"
    xmlns:wsi-analyzerConfig="http://www.ws-i.org/testing/2004/07/analyzerConfig/"
    xmlns:wsi-monConfig="http://www.ws-i.org/testing/2003/03/monitorConfig/"
    xmlns:wsi-assertions="http://www.ws-i.org/testing/2004/07/assertions/"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <analyzer version="1.0.0" releaseDate="2005-07-04">
    <implementer name="WS-I Organization" location="http://www.ws-i.org"/>
    <environment>
      <runtime name="OpenJDK Runtime Environment" version="1.7.0_40-b31"/>
      <operatingSystem name="Linux" version="3.10.26-gentoo"/>
      <xmlParser name="Apache Xerces" version="Xerces-J 2.6.2"/>
    </environment>
    <wsi-analyzerConfig:configuration>
      <wsi-analyzerConfig:verbose>false</wsi-analyzerConfig:verbose>
      <wsi-analyzerConfig:assertionResults type="all" messageEntry="true" assertionDescription="false" failureMessage="true" failureDetail="true"/>
        <wsi-analyzerConfig:reportFile replace="true" location="wsi-report-spyne.xml">
      <wsi-analyzerConfig:addStyleSheet href="wsi-test-tools/common/xsl/report.xsl" type="text/xsl" />
        </wsi-analyzerConfig:reportFile>
        <wsi-analyzerConfig:testAssertionsFile>wsi-test-tools/common/profiles/SSBP10_BP11_TAD.xml</wsi-analyzerConfig:testAssertionsFile>
        <wsi-analyzerConfig:logFile correlationType="operation">null</wsi-analyzerConfig:logFile>
      <wsi-analyzerConfig:wsdlReference>
        <wsi-analyzerConfig:wsdlElement type="port" namespace="spyne.test.interop.server" parentElementName="InteropServiceWithHeader">Application</wsi-analyzerConfig:wsdlElement>
        <wsi-analyzerConfig:wsdlURI>http://localhost:9754/?wsdl</wsi-analyzerConfig:wsdlURI>
      </wsi-analyzerConfig:wsdlReference>
    </wsi-analyzerConfig:configuration>
  </analyzer>

  <artifact type="discovery">
    <entry type="[discovery]" >
      <assertionResult id="BP3001" result="missingInput">
      </assertionResult>
      <assertionResult id="BP3002" result="missingInput">
      </assertionResult>
      <assertionResult id="BP3003" result="missingInput">
      </assertionResult>
    </entry>
  </artifact>
  <artifact type="description">
    <entry type="definitions" referenceID="http://localhost:9754/?wsdl">
      <assertionResult id="BP2201" result="passed">
      </assertionResult>
      <assertionResult id="BP2700" result="passed">
      </assertionResult>
      <assertionResult id="BP2701" result="passed">
      </assertionResult>
      <assertionResult id="BP2703" result="passed">
      </assertionResult>
      <assertionResult id="BP2034" result="passed">
      </assertionResult>
      <assertionResult id="BP2018" result="passed">
      </assertionResult>
      <assertionResult id="BP2101" result="notApplicable">
      </assertionResult>
      <assertionResult id="BP2103" result="passed">
      </assertionResult>
      <assertionResult id="BP2104" result="notApplicable">
      </assertionResult>
      <assertionResult id="BP2105" result="notApplicable">
      </assertionResult>
      <assertionResult id="BP2416" result="passed">
      </assertionResult>
      <assertionResult id="BP2417" result="passed">
      </assertionResult>
      <assertionResult id="BP2123" result="notApplicable">
      </assertionResult>
      <assertionResult id="BP4200" result="notApplicable">
      </assertionResult>
      <assertionResult id="BP4201" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="types" referenceID="http://localhost:9754/?wsdl-Types">
      <assertionResult id="BP2202" result="passed">
      </assertionResult>
      <assertionResult id="BP2102" result="passed">
      </assertionResult>
      <assertionResult id="BP2011" result="passed">
      </assertionResult>
      <assertionResult id="BP2107" result="passed">
      </assertionResult>
      <assertionResult id="BP2108" result="passed">
      </assertionResult>
      <assertionResult id="BP2110" result="passed">
      </assertionResult>
      <assertionResult id="BP2122" result="passed">
      </assertionResult>
      <assertionResult id="BP4202" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="import" referenceID="[import]">
      <assertionResult id="BP2098" result="missingInput">
      </assertionResult>
      <assertionResult id="BP2803" result="missingInput">
      </assertionResult>
    </entry>
    <entry type="binding" referenceID="{spyne.test.interop.server}Application">
      <assertionResult id="BP2020" result="notApplicable">
      </assertionResult>
      <assertionResult id="BP2021" result="passed">
      </assertionResult>
      <assertionResult id="BP2402" result="passed">
      </assertionResult>
      <assertionResult id="BP2022" result="passed">
      </assertionResult>
      <assertionResult id="BP2032" result="passed">
      </assertionResult>
      <assertionResult id="BP2404" result="passed">
      </assertionResult>
      <assertionResult id="BP2012" result="passed">
      </assertionResult>
      <assertionResult id="BP2406" result="passed">
      </assertionResult>
      <assertionResult id="BP2019" result="passed">
      </assertionResult>
      <assertionResult id="BP2013" result="notApplicable">
      </assertionResult>
      <assertionResult id="BP2017" result="passed">
      </assertionResult>
      <assertionResult id="BP2111" result="passed">
      </assertionResult>
      <assertionResult id="BP2112" result="notApplicable">
      </assertionResult>
      <assertionResult id="BP2113" result="passed">
      </assertionResult>
      <assertionResult id="BP2117" result="notApplicable">
      </assertionResult>
      <assertionResult id="BP2118" result="passed">
      </assertionResult>
      <assertionResult id="BP2114" result="passed">
      </assertionResult>
      <assertionResult id="BP2119" result="passed">
      </assertionResult>
      <assertionResult id="BP2120" result="passed">
      </assertionResult>
      <assertionResult id="SSBP2209" result="passed">
      </assertionResult>
      <assertionResult id="SSBP2403" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_in_complex_headerOutHeaderMsg">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_in_complex_headerInHeaderMsg">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}InHeader">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}send_out_complex_headerOutHeaderMsg">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}send_out_complex_headerInHeaderMsg">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}OutHeader">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="portType" referenceID="{spyne.test.interop.server}Application">
      <assertionResult id="BP2010" result="passed">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="echo_integer">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="echo_time">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="echo_float">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="echo_date">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="echo_double">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="echo_time_with_invalid_format">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="echo_any">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="echo_date_with_invalid_format">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="echo_enum">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="echo_datetime">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="echo_datetime_with_invalid_format">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="echo_boolean">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="echo_any_as_dict">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="echo_string">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="echo_duration">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="echo_date_time_array">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="echo_string_array">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="echo_simple_boolean_array">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="echo_double_array">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="echo_array_in_array">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="echo_float_array">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="echo_integer_array">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="echo_boolean_array">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="echo_attachment_array">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="echo_extension_class">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="echo_attachment">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="echo_nested_class_array">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="echo_class_with_self_reference">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="echo_simple_class">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="echo_simple_class_array">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="echo_nested_class">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="return_other_class_array">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="return_binary_data">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="long_string">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="non_nillable">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="multi_param">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="huge_number">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="test_empty">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="custom_messages">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="do_something_else">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="return_invalid_data">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="complex_return">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="send_out_header">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="echo_in_header">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="echo_in_complex_header">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="send_out_complex_header">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="python_exception">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="soap_exception">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="documented_exception">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="empty_input_bare">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="echo_complex_bare">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="empty_output_bare">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="operation" referenceID="echo_simple_bare">
      <assertionResult id="BP2208" result="passed">
      </assertionResult>
      <assertionResult id="BP2014" result="notApplicable">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_string">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}send_out_headerResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_timeResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_class_with_self_referenceResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}non_nillable">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}python_exception">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}empty_input_bareResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_dateResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_simple_class_arrayResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}do_something_elseResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_in_headerResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_datetime">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_boolean">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}soap_exceptionResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}return_invalid_dataResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}complex_return">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_nested_classResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}test_empty">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_integer_arrayResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_string_arrayResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}long_stringResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}empty_output_bareResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}do_something_else">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_attachmentResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}empty_output_bare">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_nested_class">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_boolean_arrayResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}documented_exceptionResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_floatResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}return_binary_data">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}long_string">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_date_with_invalid_format">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_extension_classResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}send_out_complex_headerResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_attachment_array">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_date_time_arrayResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}DocumentedFault">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_any_as_dict">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_simple_bare">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}custom_messagesResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_durationResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_datetimeResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_float">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}test_emptyResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_in_complex_header">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}custom_messages">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_doubleResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_array_in_arrayResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_nested_class_array">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_integer_array">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_attachment_arrayResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}multi_paramResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_any">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_stringResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_simple_class">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_enum">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}send_out_complex_header">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_float_array">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_time_with_invalid_format">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_double_arrayResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}documented_exception">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_simple_bareResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}non_nillableResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}soap_exception">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_complex_bareResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_simple_boolean_arrayResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_anyResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_nested_class_arrayResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_class_with_self_reference">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_integer">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}return_other_class_arrayResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_extension_class">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_duration">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}return_other_class_array">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}send_out_header">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}return_invalid_data">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}empty_input_bare">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_date">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_boolean_array">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}complex_returnResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}multi_param">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}python_exceptionResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_time">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_in_header">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}huge_numberResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_datetime_with_invalid_format">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_datetime_with_invalid_formatResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_simple_boolean_array">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_any_as_dictResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_integerResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_attachment">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_time_with_invalid_formatResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_array_in_array">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_enumResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_simple_class_array">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_double">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_in_complex_headerResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}huge_number">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_booleanResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_simple_classResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_date_with_invalid_formatResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}return_binary_dataResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_float_arrayResponse">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_string_array">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_double_array">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_date_time_array">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
    <entry type="message" referenceID="{spyne.test.interop.server}echo_complex_bare">
      <assertionResult id="BP2115" result="passed">
      </assertionResult>
      <assertionResult id="BP2116" result="passed">
      </assertionResult>
    </entry>
  </artifact>
  <artifact type="message">
    <entry type="[message]" >
      <assertionResult id="BP1004" result="missingInput">
      </assertionResult>
      <assertionResult id="BP1006" result="missingInput">
      </assertionResult>
      <assertionResult id="BP1116" result="missingInput">
      </assertionResult>
      <assertionResult id="BP1002" result="missingInput">
      </assertionResult>
      <assertionResult id="BP1001" result="missingInput">
      </assertionResult>
      <assertionResult id="BP1010" result="missingInput">
      </assertionResult>
      <assertionResult id="BP1101" result="missingInput">
      </assertionResult>
      <assertionResult id="BP1103" result="missingInput">
      </assertionResult>
      <assertionResult id="BP4103" result="missingInput">
      </assertionResult>
      <assertionResult id="BP4104" result="missingInput">
      </assertionResult>
      <assertionResult id="BP4105" result="missingInput">
      </assertionResult>
      <assertionResult id="BP4106" result="missingInput">
      </assertionResult>
      <assertionResult id="BP4107" result="missingInput">
      </assertionResult>
      <assertionResult id="SSBP1003" result="missingInput">
      </assertionResult>
      <assertionResult id="SSBP5100" result="missingInput">
      </assertionResult>
      <assertionResult id="SSBP5101" result="missingInput">
      </assertionResult>
    </entry>
  </artifact>
  <artifact type="envelope">
    <entry type="[envelope]" >
      <assertionResult id="BP1107" result="missingInput">
      </assertionResult>
      <assertionResult id="BP1601" result="missingInput">
      </assertionResult>
      <assertionResult id="BP1201" result="missingInput">
      </assertionResult>
      <assertionResult id="BP1701" result="missingInput">
      </assertionResult>
      <assertionResult id="BP1308" result="missingInput">
      </assertionResult>
      <assertionResult id="BP1011" result="missingInput">
      </assertionResult>
      <assertionResult id="BP1013" result="missingInput">
      </assertionResult>
      <assertionResult id="BP1204" result="missingInput">
      </assertionResult>
      <assertionResult id="BP1301" result="missingInput">
      </assertionResult>
      <assertionResult id="BP1305" result="missingInput">
      </assertionResult>
      <assertionResult id="BP1306" result="missingInput">
      </assertionResult>
      <assertionResult id="BP1031" result="missingInput">
      </assertionResult>
      <assertionResult id="BP1032" result="missingInput">
      </assertionResult>
      <assertionResult id="BP1033" result="missingInput">
      </assertionResult>
      <assertionResult id="BP1316" result="missingInput">
      </assertionResult>
      <assertionResult id="BP1307" result="missingInput">
      </assertionResult>
      <assertionResult id="BP1202" result="missingInput">
      </assertionResult>
      <assertionResult id="BP1318" result="missingInput">
      </assertionResult>
      <assertionResult id="BP1008" result="missingInput">
      </assertionResult>
      <assertionResult id="BP1211" result="missingInput">
      </assertionResult>
      <assertionResult id="BP1212" result="missingInput">
      </assertionResult>
      <assertionResult id="BP1213" result="missingInput">
      </assertionResult>
      <assertionResult id="BP1214" result="missingInput">
      </assertionResult>
      <assertionResult id="BP1755" result="missingInput">
      </assertionResult>
      <assertionResult id="BP1005" result="missingInput">
      </assertionResult>
      <assertionResult id="BP1302" result="missingInput">
      </assertionResult>
      <assertionResult id="BP1203" result="missingInput">
      </assertionResult>
      <assertionResult id="BP1100" result="missingInput">
      </assertionResult>
      <assertionResult id="BP1600" result="missingInput">
      </assertionResult>
      <assertionResult id="BP1012" result="missingInput">
      </assertionResult>
      <assertionResult id="BP1007" result="missingInput">
      </assertionResult>
      <assertionResult id="BP1208" result="missingInput">
      </assertionResult>
      <assertionResult id="BP1009" result="missingInput">
      </assertionResult>
      <assertionResult id="BP1309" result="missingInput">
      </assertionResult>
      <assertionResult id="BP4100" result="missingInput">
      </assertionResult>
      <assertionResult id="BP4101" result="missingInput">
      </assertionResult>
      <assertionResult id="BP4102" result="missingInput">
      </assertionResult>
      <assertionResult id="BP4109" result="missingInput">
      </assertionResult>
      <assertionResult id="SSBP1601" result="missingInput">
      </assertionResult>
      <assertionResult id="SSBP9704" result="missingInput">
      </assertionResult>
    </entry>
  </artifact>
  <summary result="passed">
  </summary>
</report>
