<?xml version='1.0' encoding='utf-8'?>
<wsdl:definitions name="Application" targetNamespace="rpclib.test.interop.server"
                  xmlns:plink="http://schemas.xmlsoap.org/ws/2003/05/partner-link/"
                  xmlns:s0="bar"
                  xmlns:s1="punk.tunk"
                  xmlns:s12enc="http://www.w3.org/2003/05/soap-encoding/"
                  xmlns:s12env="http://www.w3.org/2003/05/soap-envelope/"
                  xmlns:s2="rpclib.test.interop.server._service"
                  xmlns:s3="hunk.sunk"
                  xmlns:senc="http://schemas.xmlsoap.org/soap/encoding/"
                  xmlns:senv="http://schemas.xmlsoap.org/soap/envelope/"
                  xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                  xmlns:tns="rpclib.test.interop.server"
                  xmlns:wsa="http://schemas.xmlsoap.org/ws/2003/03/addressing"
                  xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
                  xmlns:xop="http://www.w3.org/2004/08/xop/include"
                  xmlns:xs="http://www.w3.org/2001/XMLSchema"
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <wsdl:types>
    <xs:schema elementFormDefault="qualified" targetNamespace="bar">
      <xs:import namespace="punk.tunk" />
      <xs:import namespace="hunk.sunk" />
      <xs:element name="ExtensionClass" type="s0:ExtensionClass" />
      <xs:complexType name="ExtensionClass">
        <xs:complexContent>
          <xs:extension base="s1:NestedClass">
            <xs:sequence>
              <xs:element minOccurs="0" name="l" nillable="true" type="xs:dateTime" />
              <xs:element minOccurs="0" name="q" nillable="true" type="xs:integer" />
              <xs:element minOccurs="0" name="p" nillable="true" type="s3:NonNillableClass" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema elementFormDefault="qualified" targetNamespace="hunk.sunk">
      <xs:element name="NonNillableClass" type="s3:NonNillableClass" />
      <xs:simpleType name="NonNillableClass_sType">
        <xs:restriction base="xs:string">
          <xs:minLength value="1" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="NonNillableClass">
        <xs:sequence>
          <xs:element minOccurs="0" name="i" type="xs:integer" />
          <xs:element minOccurs="0" name="s" type="s3:NonNillableClass_sType" />
          <xs:element name="dt" type="xs:dateTime" />
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema elementFormDefault="qualified" targetNamespace="punk.tunk">
      <xs:import namespace="rpclib.test.interop.server" />
      <xs:import namespace="rpclib.test.interop.server._service" />
      <xs:element name="NestedClass" type="s1:NestedClass" />
      <xs:element name="NestedClassArray" type="s1:NestedClassArray" />
      <xs:complexType name="NestedClass">
        <xs:sequence>
          <xs:element minOccurs="0" name="f" nillable="true" type="xs:float" />
          <xs:element minOccurs="0" name="simple" nillable="true" type="s2:SimpleClassArray" />
          <xs:element minOccurs="0" name="i" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="s" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="other" nillable="true" type="s2:OtherClass" />
          <xs:element minOccurs="0" name="ai" nillable="true" type="tns:integerArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="NestedClassArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="NestedClass" nillable="true" type="s1:NestedClass" />
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema elementFormDefault="qualified" targetNamespace="rpclib.test.interop.server">
      <xs:import namespace="punk.tunk" />
      <xs:import namespace="bar" />
      <xs:import namespace="rpclib.test.interop.server._service" />
      <xs:import namespace="hunk.sunk" />
      <xs:element name="InHeader" type="tns:InHeader" />
      <xs:element name="InTraceHeader" type="tns:InTraceHeader" />
      <xs:element name="OutHeader" type="tns:OutHeader" />
      <xs:element name="OutTraceHeader" type="tns:OutTraceHeader" />
      <xs:element name="RoleEnumArray" type="tns:RoleEnumArray" />
      <xs:element name="base64BinaryArray" type="tns:base64BinaryArray" />
      <xs:element name="booleanArray" type="tns:booleanArray" />
      <xs:element name="booleanArrayArray" type="tns:booleanArrayArray" />
      <xs:element name="complex_return" type="tns:complex_return" />
      <xs:element name="complex_returnResponse" type="tns:complex_returnResponse" />
      <xs:element name="custom_messages" type="tns:custom_messages" />
      <xs:element name="dateTimeArray" type="tns:dateTimeArray" />
      <xs:element name="do_something_else" type="tns:do_something_else" />
      <xs:element name="do_something_elseResponse" type="tns:do_something_elseResponse" />
      <xs:element name="doubleArray" type="tns:doubleArray" />
      <xs:element name="echo_any" type="tns:echo_any" />
      <xs:element name="echo_anyResponse" type="tns:echo_anyResponse" />
      <xs:element name="echo_any_as_dict" type="tns:echo_any_as_dict" />
      <xs:element name="echo_any_as_dictResponse" type="tns:echo_any_as_dictResponse" />
      <xs:element name="echo_array_in_array" type="tns:echo_array_in_array" />
      <xs:element name="echo_array_in_arrayResponse" type="tns:echo_array_in_arrayResponse" />
      <xs:element name="echo_attachment" type="tns:echo_attachment" />
      <xs:element name="echo_attachmentResponse" type="tns:echo_attachmentResponse" />
      <xs:element name="echo_attachment_array" type="tns:echo_attachment_array" />
      <xs:element name="echo_attachment_arrayResponse" type="tns:echo_attachment_arrayResponse" />
      <xs:element name="echo_boolean" type="tns:echo_boolean" />
      <xs:element name="echo_booleanResponse" type="tns:echo_booleanResponse" />
      <xs:element name="echo_boolean_array" type="tns:echo_boolean_array" />
      <xs:element name="echo_boolean_arrayResponse" type="tns:echo_boolean_arrayResponse" />
      <xs:element name="echo_date_time_array" type="tns:echo_date_time_array" />
      <xs:element name="echo_date_time_arrayResponse" type="tns:echo_date_time_arrayResponse" />
      <xs:element name="echo_datetime" type="tns:echo_datetime" />
      <xs:element name="echo_datetimeResponse" type="tns:echo_datetimeResponse" />
      <xs:element name="echo_double" type="tns:echo_double" />
      <xs:element name="echo_doubleResponse" type="tns:echo_doubleResponse" />
      <xs:element name="echo_double_array" type="tns:echo_double_array" />
      <xs:element name="echo_double_arrayResponse" type="tns:echo_double_arrayResponse" />
      <xs:element name="echo_duration" type="tns:echo_duration" />
      <xs:element name="echo_durationResponse" type="tns:echo_durationResponse" />
      <xs:element name="echo_enum" type="tns:echo_enum" />
      <xs:element name="echo_enumResponse" type="tns:echo_enumResponse" />
      <xs:element name="echo_extension_class" type="tns:echo_extension_class" />
      <xs:element name="echo_extension_classResponse" type="tns:echo_extension_classResponse" />
      <xs:element name="echo_float" type="tns:echo_float" />
      <xs:element name="echo_floatResponse" type="tns:echo_floatResponse" />
      <xs:element name="echo_float_array" type="tns:echo_float_array" />
      <xs:element name="echo_float_arrayResponse" type="tns:echo_float_arrayResponse" />
      <xs:element name="echo_in_complex_header" type="tns:echo_in_complex_header" />
      <xs:element name="echo_in_complex_headerResponse" type="tns:echo_in_complex_headerResponse" />
      <xs:element name="echo_in_header" type="tns:echo_in_header" />
      <xs:element name="echo_in_headerResponse" type="tns:echo_in_headerResponse" />
      <xs:element name="echo_integer" type="tns:echo_integer" />
      <xs:element name="echo_integerResponse" type="tns:echo_integerResponse" />
      <xs:element name="echo_integer_array" type="tns:echo_integer_array" />
      <xs:element name="echo_integer_arrayResponse" type="tns:echo_integer_arrayResponse" />
      <xs:element name="echo_nested_class" type="tns:echo_nested_class" />
      <xs:element name="echo_nested_classResponse" type="tns:echo_nested_classResponse" />
      <xs:element name="echo_nested_class_array" type="tns:echo_nested_class_array" />
      <xs:element name="echo_nested_class_arrayResponse" type="tns:echo_nested_class_arrayResponse" />
      <xs:element name="echo_simple_boolean_array" type="tns:echo_simple_boolean_array" />
      <xs:element name="echo_simple_boolean_arrayResponse" type="tns:echo_simple_boolean_arrayResponse" />
      <xs:element name="echo_simple_class" type="tns:echo_simple_class" />
      <xs:element name="echo_simple_classResponse" type="tns:echo_simple_classResponse" />
      <xs:element name="echo_simple_class_array" type="tns:echo_simple_class_array" />
      <xs:element name="echo_simple_class_arrayResponse" type="tns:echo_simple_class_arrayResponse" />
      <xs:element name="echo_string" type="tns:echo_string" />
      <xs:element name="echo_stringResponse" type="tns:echo_stringResponse" />
      <xs:element name="echo_string_array" type="tns:echo_string_array" />
      <xs:element name="echo_string_arrayResponse" type="tns:echo_string_arrayResponse" />
      <xs:element name="floatArray" type="tns:floatArray" />
      <xs:element name="getCustomMessagesMsgOut" type="tns:getCustomMessagesMsgOut" />
      <xs:element name="huge_number" type="tns:huge_number" />
      <xs:element name="huge_numberResponse" type="tns:huge_numberResponse" />
      <xs:element name="integerArray" type="tns:integerArray" />
      <xs:element name="long_string" type="tns:long_string" />
      <xs:element name="long_stringResponse" type="tns:long_stringResponse" />
      <xs:element name="multi_param" type="tns:multi_param" />
      <xs:element name="multi_paramResponse" type="tns:multi_paramResponse" />
      <xs:element name="non_nillable" type="tns:non_nillable" />
      <xs:element name="non_nillableResponse" type="tns:non_nillableResponse" />
      <xs:element name="python_exception" type="tns:python_exception" />
      <xs:element name="python_exceptionResponse" type="tns:python_exceptionResponse" />
      <xs:element name="return_binary_data" type="tns:return_binary_data" />
      <xs:element name="return_binary_dataResponse" type="tns:return_binary_dataResponse" />
      <xs:element name="return_invalid_data" type="tns:return_invalid_data" />
      <xs:element name="return_invalid_dataResponse" type="tns:return_invalid_dataResponse" />
      <xs:element name="return_only" type="tns:return_only" />
      <xs:element name="return_onlyResponse" type="tns:return_onlyResponse" />
      <xs:element name="return_other_class_array" type="tns:return_other_class_array" />
      <xs:element name="return_other_class_arrayResponse" type="tns:return_other_class_arrayResponse" />
      <xs:element name="send_out_complex_header" type="tns:send_out_complex_header" />
      <xs:element name="send_out_complex_headerResponse" type="tns:send_out_complex_headerResponse" />
      <xs:element name="send_out_header" type="tns:send_out_header" />
      <xs:element name="send_out_headerResponse" type="tns:send_out_headerResponse" />
      <xs:element name="soap_exception" type="tns:soap_exception" />
      <xs:element name="soap_exceptionResponse" type="tns:soap_exceptionResponse" />
      <xs:element name="stringArray" type="tns:stringArray" />
      <xs:element name="test_empty" type="tns:test_empty" />
      <xs:element name="test_emptyResponse" type="tns:test_emptyResponse" />
      <xs:simpleType name="DaysOfWeekEnum">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Monday" />
          <xs:enumeration value="Tuesday" />
          <xs:enumeration value="Wednesday" />
          <xs:enumeration value="Friday" />
          <xs:enumeration value="Saturday" />
          <xs:enumeration value="Sunday" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="RoleEnum">
        <xs:restriction base="xs:string">
          <xs:enumeration value="MEMBER" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="InHeader">
        <xs:sequence>
          <xs:element minOccurs="0" name="i" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="s" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="InTraceHeader">
        <xs:sequence>
          <xs:element minOccurs="0" name="callDate" nillable="true" type="xs:dateTime" />
          <xs:element minOccurs="0" name="client" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OutHeader">
        <xs:sequence>
          <xs:element minOccurs="0" name="f" nillable="true" type="xs:float" />
          <xs:element minOccurs="0" name="dt" nillable="true" type="xs:dateTime" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OutTraceHeader">
        <xs:sequence>
          <xs:element minOccurs="0" name="receiptDate" nillable="true" type="xs:dateTime" />
          <xs:element minOccurs="0" name="returnDate" nillable="true" type="xs:dateTime" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="RoleEnumArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="RoleEnum" nillable="true" type="tns:RoleEnum" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="base64BinaryArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="base64Binary" nillable="true" type="xs:base64Binary" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="booleanArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="boolean" nillable="true" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="booleanArrayArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="booleanArray" nillable="true" type="tns:booleanArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="complex_return">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="complex_returnResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="resultCode" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="resultDescription" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="transactionId" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="roles" nillable="true" type="tns:RoleEnumArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="custom_messages">
        <xs:sequence>
          <xs:element minOccurs="0" name="s" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="dateTimeArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="dateTime" nillable="true" type="xs:dateTime" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="do_something_else">
        <xs:sequence>
          <xs:element minOccurs="0" name="s" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="do_something_elseResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="do_something_elseResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="doubleArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="double" nillable="true" type="xs:double" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_any">
        <xs:sequence>
          <xs:element minOccurs="0" name="xml" nillable="true" type="xs:anyType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_anyResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="echo_anyResult" nillable="true" type="xs:anyType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_any_as_dict">
        <xs:sequence>
          <xs:element minOccurs="0" name="xml_as_dict" nillable="true" type="xs:anyType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_any_as_dictResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="echo_any_as_dictResult" nillable="true" type="xs:anyType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_array_in_array">
        <xs:sequence>
          <xs:element minOccurs="0" name="baa" nillable="true" type="tns:booleanArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_array_in_arrayResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="echo_array_in_arrayResult" nillable="true" type="tns:booleanArrayArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_attachment">
        <xs:sequence>
          <xs:element minOccurs="0" name="a" nillable="true" type="xs:base64Binary" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_attachmentResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="echo_attachmentResult" nillable="true" type="xs:base64Binary" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_attachment_array">
        <xs:sequence>
          <xs:element minOccurs="0" name="aa" nillable="true" type="tns:base64BinaryArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_attachment_arrayResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="echo_attachment_arrayResult" nillable="true" type="tns:base64BinaryArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_boolean">
        <xs:sequence>
          <xs:element minOccurs="0" name="b" nillable="true" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_booleanResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="echo_booleanResult" nillable="true" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_boolean_array">
        <xs:sequence>
          <xs:element minOccurs="0" name="ba" nillable="true" type="tns:booleanArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_boolean_arrayResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="echo_boolean_arrayResult" nillable="true" type="tns:booleanArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_date_time_array">
        <xs:sequence>
          <xs:element minOccurs="0" name="dta" nillable="true" type="tns:dateTimeArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_date_time_arrayResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="echo_date_time_arrayResult" nillable="true" type="tns:dateTimeArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_datetime">
        <xs:sequence>
          <xs:element minOccurs="0" name="dt" nillable="true" type="xs:dateTime" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_datetimeResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="echo_datetimeResult" nillable="true" type="xs:dateTime" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_double">
        <xs:sequence>
          <xs:element minOccurs="0" name="f" nillable="true" type="xs:double" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_doubleResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="echo_doubleResult" nillable="true" type="xs:double" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_double_array">
        <xs:sequence>
          <xs:element minOccurs="0" name="da" nillable="true" type="tns:doubleArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_double_arrayResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="echo_double_arrayResult" nillable="true" type="tns:doubleArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_duration">
        <xs:sequence>
          <xs:element minOccurs="0" name="dur" nillable="true" type="xs:duration" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_durationResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="echo_durationResult" nillable="true" type="xs:duration" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_enum">
        <xs:sequence>
          <xs:element minOccurs="0" name="day" nillable="true" type="tns:DaysOfWeekEnum" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_enumResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="echo_enumResult" nillable="true" type="tns:DaysOfWeekEnum" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_extension_class">
        <xs:sequence>
          <xs:element minOccurs="0" name="nc" nillable="true" type="s0:ExtensionClass" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_extension_classResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="echo_extension_classResult" nillable="true" type="s0:ExtensionClass" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_float">
        <xs:sequence>
          <xs:element minOccurs="0" name="f" nillable="true" type="xs:float" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_floatResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="echo_floatResult" nillable="true" type="xs:float" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_float_array">
        <xs:sequence>
          <xs:element minOccurs="0" name="fa" nillable="true" type="tns:floatArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_float_arrayResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="echo_float_arrayResult" nillable="true" type="tns:floatArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_in_complex_header">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="echo_in_complex_headerResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="echo_in_complex_headerResult0" nillable="true" type="tns:InHeader" />
          <xs:element minOccurs="0" name="echo_in_complex_headerResult1" nillable="true" type="tns:InTraceHeader" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_in_header">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="echo_in_headerResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="echo_in_headerResult" nillable="true" type="tns:InHeader" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_integer">
        <xs:sequence>
          <xs:element minOccurs="0" name="i" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_integerResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="echo_integerResult" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_integer_array">
        <xs:sequence>
          <xs:element minOccurs="0" name="ia" nillable="true" type="tns:integerArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_integer_arrayResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="echo_integer_arrayResult" nillable="true" type="tns:integerArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_nested_class">
        <xs:sequence>
          <xs:element minOccurs="0" name="nc" nillable="true" type="s1:NestedClass" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_nested_classResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="echo_nested_classResult" nillable="true" type="s1:NestedClass" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_nested_class_array">
        <xs:sequence>
          <xs:element minOccurs="0" name="nca" nillable="true" type="s1:NestedClassArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_nested_class_arrayResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="echo_nested_class_arrayResult" nillable="true" type="s1:NestedClassArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_simple_boolean_array">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="ba" nillable="true" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_simple_boolean_arrayResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="echo_simple_boolean_arrayResult" nillable="true" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_simple_class">
        <xs:sequence>
          <xs:element minOccurs="0" name="sc" nillable="true" type="s2:SimpleClass" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_simple_classResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="echo_simple_classResult" nillable="true" type="s2:SimpleClass" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_simple_class_array">
        <xs:sequence>
          <xs:element minOccurs="0" name="sca" nillable="true" type="s2:SimpleClassArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_simple_class_arrayResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="echo_simple_class_arrayResult" nillable="true" type="s2:SimpleClassArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_string">
        <xs:sequence>
          <xs:element minOccurs="0" name="s" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_stringResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="echo_stringResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_string_array">
        <xs:sequence>
          <xs:element minOccurs="0" name="sa" nillable="true" type="tns:stringArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="echo_string_arrayResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="echo_string_arrayResult" nillable="true" type="tns:stringArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="floatArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="float" nillable="true" type="xs:float" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCustomMessagesMsgOut">
        <xs:sequence>
          <xs:element minOccurs="0" name="CustomMessages" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="huge_number">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="huge_numberResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="huge_numberResult" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="integerArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="integer" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="long_string">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="long_stringResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="long_stringResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="multi_param">
        <xs:sequence>
          <xs:element minOccurs="0" name="s" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="i" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="dt" nillable="true" type="xs:dateTime" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="multi_paramResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="non_nillable">
        <xs:sequence>
          <xs:element minOccurs="0" name="n" nillable="true" type="s3:NonNillableClass" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="non_nillableResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="non_nillableResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="python_exception">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="python_exceptionResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="return_binary_data">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="return_binary_dataResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return_binary_dataResult" nillable="true" type="xs:base64Binary" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="return_invalid_data">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="return_invalid_dataResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return_invalid_dataResult" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="return_only">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="return_onlyResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return_onlyResult" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="return_other_class_array">
        <xs:sequence>
          <xs:element minOccurs="0" name="num" nillable="true" type="xs:integer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="return_other_class_arrayResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return_other_class_arrayResult" nillable="true" type="s2:OtherClassArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="send_out_complex_header">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="send_out_complex_headerResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="send_out_complex_headerResult0" nillable="true" type="tns:OutHeader" />
          <xs:element minOccurs="0" name="send_out_complex_headerResult1" nillable="true" type="tns:OutTraceHeader" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="send_out_header">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="send_out_headerResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="send_out_headerResult" nillable="true" type="tns:OutHeader" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="soap_exception">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="soap_exceptionResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="stringArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="string" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="test_empty">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="test_emptyResponse">
        <xs:sequence />
      </xs:complexType>
    </xs:schema>
    <xs:schema elementFormDefault="qualified" targetNamespace="rpclib.test.interop.server._service">
      <xs:element name="OtherClass" type="s2:OtherClass" />
      <xs:element name="OtherClassArray" type="s2:OtherClassArray" />
      <xs:element name="SimpleClass" type="s2:SimpleClass" />
      <xs:element name="SimpleClassArray" type="s2:SimpleClassArray" />
      <xs:complexType name="OtherClass">
        <xs:sequence>
          <xs:element minOccurs="0" name="b" nillable="true" type="xs:boolean" />
          <xs:element minOccurs="0" name="d" nillable="true" type="xs:double" />
          <xs:element minOccurs="0" name="dt" nillable="true" type="xs:dateTime" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OtherClassArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="OtherClass" nillable="true" type="s2:OtherClass" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SimpleClass">
        <xs:sequence>
          <xs:element minOccurs="0" name="i" nillable="true" type="xs:integer" />
          <xs:element minOccurs="0" name="s" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SimpleClassArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="SimpleClass" nillable="true" type="s2:SimpleClass" />
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="InHeader">
    <wsdl:part element="tns:InHeader" name="InHeader" />
  </wsdl:message>
  <wsdl:message name="OutHeader">
    <wsdl:part element="tns:OutHeader" name="OutHeader" />
  </wsdl:message>
  <wsdl:message name="complex_return">
    <wsdl:part element="tns:complex_return" name="complex_return" />
  </wsdl:message>
  <wsdl:message name="complex_returnResponse">
    <wsdl:part element="tns:complex_returnResponse" name="complex_returnResponse" />
  </wsdl:message>
  <wsdl:message name="custom_messages">
    <wsdl:part element="tns:custom_messages" name="custom_messages" />
  </wsdl:message>
  <wsdl:message name="do_something_else">
    <wsdl:part element="tns:do_something_else" name="do_something_else" />
  </wsdl:message>
  <wsdl:message name="do_something_elseResponse">
    <wsdl:part element="tns:do_something_elseResponse" name="do_something_elseResponse" />
  </wsdl:message>
  <wsdl:message name="echo_any">
    <wsdl:part element="tns:echo_any" name="echo_any" />
  </wsdl:message>
  <wsdl:message name="echo_anyResponse">
    <wsdl:part element="tns:echo_anyResponse" name="echo_anyResponse" />
  </wsdl:message>
  <wsdl:message name="echo_any_as_dict">
    <wsdl:part element="tns:echo_any_as_dict" name="echo_any_as_dict" />
  </wsdl:message>
  <wsdl:message name="echo_any_as_dictResponse">
    <wsdl:part element="tns:echo_any_as_dictResponse" name="echo_any_as_dictResponse" />
  </wsdl:message>
  <wsdl:message name="echo_array_in_array">
    <wsdl:part element="tns:echo_array_in_array" name="echo_array_in_array" />
  </wsdl:message>
  <wsdl:message name="echo_array_in_arrayResponse">
    <wsdl:part element="tns:echo_array_in_arrayResponse" name="echo_array_in_arrayResponse" />
  </wsdl:message>
  <wsdl:message name="echo_attachment">
    <wsdl:part element="tns:echo_attachment" name="echo_attachment" />
  </wsdl:message>
  <wsdl:message name="echo_attachmentResponse">
    <wsdl:part element="tns:echo_attachmentResponse" name="echo_attachmentResponse" />
  </wsdl:message>
  <wsdl:message name="echo_attachment_array">
    <wsdl:part element="tns:echo_attachment_array" name="echo_attachment_array" />
  </wsdl:message>
  <wsdl:message name="echo_attachment_arrayResponse">
    <wsdl:part element="tns:echo_attachment_arrayResponse" name="echo_attachment_arrayResponse" />
  </wsdl:message>
  <wsdl:message name="echo_boolean">
    <wsdl:part element="tns:echo_boolean" name="echo_boolean" />
  </wsdl:message>
  <wsdl:message name="echo_booleanResponse">
    <wsdl:part element="tns:echo_booleanResponse" name="echo_booleanResponse" />
  </wsdl:message>
  <wsdl:message name="echo_boolean_array">
    <wsdl:part element="tns:echo_boolean_array" name="echo_boolean_array" />
  </wsdl:message>
  <wsdl:message name="echo_boolean_arrayResponse">
    <wsdl:part element="tns:echo_boolean_arrayResponse" name="echo_boolean_arrayResponse" />
  </wsdl:message>
  <wsdl:message name="echo_date_time_array">
    <wsdl:part element="tns:echo_date_time_array" name="echo_date_time_array" />
  </wsdl:message>
  <wsdl:message name="echo_date_time_arrayResponse">
    <wsdl:part element="tns:echo_date_time_arrayResponse" name="echo_date_time_arrayResponse" />
  </wsdl:message>
  <wsdl:message name="echo_datetime">
    <wsdl:part element="tns:echo_datetime" name="echo_datetime" />
  </wsdl:message>
  <wsdl:message name="echo_datetimeResponse">
    <wsdl:part element="tns:echo_datetimeResponse" name="echo_datetimeResponse" />
  </wsdl:message>
  <wsdl:message name="echo_double">
    <wsdl:part element="tns:echo_double" name="echo_double" />
  </wsdl:message>
  <wsdl:message name="echo_doubleResponse">
    <wsdl:part element="tns:echo_doubleResponse" name="echo_doubleResponse" />
  </wsdl:message>
  <wsdl:message name="echo_double_array">
    <wsdl:part element="tns:echo_double_array" name="echo_double_array" />
  </wsdl:message>
  <wsdl:message name="echo_double_arrayResponse">
    <wsdl:part element="tns:echo_double_arrayResponse" name="echo_double_arrayResponse" />
  </wsdl:message>
  <wsdl:message name="echo_duration">
    <wsdl:part element="tns:echo_duration" name="echo_duration" />
  </wsdl:message>
  <wsdl:message name="echo_durationResponse">
    <wsdl:part element="tns:echo_durationResponse" name="echo_durationResponse" />
  </wsdl:message>
  <wsdl:message name="echo_enum">
    <wsdl:part element="tns:echo_enum" name="echo_enum" />
  </wsdl:message>
  <wsdl:message name="echo_enumResponse">
    <wsdl:part element="tns:echo_enumResponse" name="echo_enumResponse" />
  </wsdl:message>
  <wsdl:message name="echo_extension_class">
    <wsdl:part element="tns:echo_extension_class" name="echo_extension_class" />
  </wsdl:message>
  <wsdl:message name="echo_extension_classResponse">
    <wsdl:part element="tns:echo_extension_classResponse" name="echo_extension_classResponse" />
  </wsdl:message>
  <wsdl:message name="echo_float">
    <wsdl:part element="tns:echo_float" name="echo_float" />
  </wsdl:message>
  <wsdl:message name="echo_floatResponse">
    <wsdl:part element="tns:echo_floatResponse" name="echo_floatResponse" />
  </wsdl:message>
  <wsdl:message name="echo_float_array">
    <wsdl:part element="tns:echo_float_array" name="echo_float_array" />
  </wsdl:message>
  <wsdl:message name="echo_float_arrayResponse">
    <wsdl:part element="tns:echo_float_arrayResponse" name="echo_float_arrayResponse" />
  </wsdl:message>
  <wsdl:message name="echo_in_complex_header">
    <wsdl:part element="tns:echo_in_complex_header" name="echo_in_complex_header" />
  </wsdl:message>
  <wsdl:message name="echo_in_complex_headerInHeaderMsg">
    <wsdl:part element="tns:InHeader" name="InHeader" />
    <wsdl:part element="tns:InTraceHeader" name="InTraceHeader" />
  </wsdl:message>
  <wsdl:message name="echo_in_complex_headerOutHeaderMsg">
    <wsdl:part element="tns:OutHeader" name="OutHeader" />
    <wsdl:part element="tns:OutTraceHeader" name="OutTraceHeader" />
  </wsdl:message>
  <wsdl:message name="echo_in_complex_headerResponse">
    <wsdl:part element="tns:echo_in_complex_headerResponse" name="echo_in_complex_headerResponse" />
  </wsdl:message>
  <wsdl:message name="echo_in_header">
    <wsdl:part element="tns:echo_in_header" name="echo_in_header" />
  </wsdl:message>
  <wsdl:message name="echo_in_headerResponse">
    <wsdl:part element="tns:echo_in_headerResponse" name="echo_in_headerResponse" />
  </wsdl:message>
  <wsdl:message name="echo_integer">
    <wsdl:part element="tns:echo_integer" name="echo_integer" />
  </wsdl:message>
  <wsdl:message name="echo_integerResponse">
    <wsdl:part element="tns:echo_integerResponse" name="echo_integerResponse" />
  </wsdl:message>
  <wsdl:message name="echo_integer_array">
    <wsdl:part element="tns:echo_integer_array" name="echo_integer_array" />
  </wsdl:message>
  <wsdl:message name="echo_integer_arrayResponse">
    <wsdl:part element="tns:echo_integer_arrayResponse" name="echo_integer_arrayResponse" />
  </wsdl:message>
  <wsdl:message name="echo_nested_class">
    <wsdl:part element="tns:echo_nested_class" name="echo_nested_class" />
  </wsdl:message>
  <wsdl:message name="echo_nested_classResponse">
    <wsdl:part element="tns:echo_nested_classResponse" name="echo_nested_classResponse" />
  </wsdl:message>
  <wsdl:message name="echo_nested_class_array">
    <wsdl:part element="tns:echo_nested_class_array" name="echo_nested_class_array" />
  </wsdl:message>
  <wsdl:message name="echo_nested_class_arrayResponse">
    <wsdl:part element="tns:echo_nested_class_arrayResponse" name="echo_nested_class_arrayResponse" />
  </wsdl:message>
  <wsdl:message name="echo_simple_boolean_array">
    <wsdl:part element="tns:echo_simple_boolean_array" name="echo_simple_boolean_array" />
  </wsdl:message>
  <wsdl:message name="echo_simple_boolean_arrayResponse">
    <wsdl:part element="tns:echo_simple_boolean_arrayResponse" name="echo_simple_boolean_arrayResponse" />
  </wsdl:message>
  <wsdl:message name="echo_simple_class">
    <wsdl:part element="tns:echo_simple_class" name="echo_simple_class" />
  </wsdl:message>
  <wsdl:message name="echo_simple_classResponse">
    <wsdl:part element="tns:echo_simple_classResponse" name="echo_simple_classResponse" />
  </wsdl:message>
  <wsdl:message name="echo_simple_class_array">
    <wsdl:part element="tns:echo_simple_class_array" name="echo_simple_class_array" />
  </wsdl:message>
  <wsdl:message name="echo_simple_class_arrayResponse">
    <wsdl:part element="tns:echo_simple_class_arrayResponse" name="echo_simple_class_arrayResponse" />
  </wsdl:message>
  <wsdl:message name="echo_string">
    <wsdl:part element="tns:echo_string" name="echo_string" />
  </wsdl:message>
  <wsdl:message name="echo_stringResponse">
    <wsdl:part element="tns:echo_stringResponse" name="echo_stringResponse" />
  </wsdl:message>
  <wsdl:message name="echo_string_array">
    <wsdl:part element="tns:echo_string_array" name="echo_string_array" />
  </wsdl:message>
  <wsdl:message name="echo_string_arrayResponse">
    <wsdl:part element="tns:echo_string_arrayResponse" name="echo_string_arrayResponse" />
  </wsdl:message>
  <wsdl:message name="getCustomMessagesMsgOut">
    <wsdl:part element="tns:getCustomMessagesMsgOut" name="getCustomMessagesMsgOut" />
  </wsdl:message>
  <wsdl:message name="huge_number">
    <wsdl:part element="tns:huge_number" name="huge_number" />
  </wsdl:message>
  <wsdl:message name="huge_numberResponse">
    <wsdl:part element="tns:huge_numberResponse" name="huge_numberResponse" />
  </wsdl:message>
  <wsdl:message name="long_string">
    <wsdl:part element="tns:long_string" name="long_string" />
  </wsdl:message>
  <wsdl:message name="long_stringResponse">
    <wsdl:part element="tns:long_stringResponse" name="long_stringResponse" />
  </wsdl:message>
  <wsdl:message name="multi_param">
    <wsdl:part element="tns:multi_param" name="multi_param" />
  </wsdl:message>
  <wsdl:message name="multi_paramResponse">
    <wsdl:part element="tns:multi_paramResponse" name="multi_paramResponse" />
  </wsdl:message>
  <wsdl:message name="non_nillable">
    <wsdl:part element="tns:non_nillable" name="non_nillable" />
  </wsdl:message>
  <wsdl:message name="non_nillableResponse">
    <wsdl:part element="tns:non_nillableResponse" name="non_nillableResponse" />
  </wsdl:message>
  <wsdl:message name="python_exception">
    <wsdl:part element="tns:python_exception" name="python_exception" />
  </wsdl:message>
  <wsdl:message name="python_exceptionResponse">
    <wsdl:part element="tns:python_exceptionResponse" name="python_exceptionResponse" />
  </wsdl:message>
  <wsdl:message name="return_binary_data">
    <wsdl:part element="tns:return_binary_data" name="return_binary_data" />
  </wsdl:message>
  <wsdl:message name="return_binary_dataResponse">
    <wsdl:part element="tns:return_binary_dataResponse" name="return_binary_dataResponse" />
  </wsdl:message>
  <wsdl:message name="return_invalid_data">
    <wsdl:part element="tns:return_invalid_data" name="return_invalid_data" />
  </wsdl:message>
  <wsdl:message name="return_invalid_dataResponse">
    <wsdl:part element="tns:return_invalid_dataResponse" name="return_invalid_dataResponse" />
  </wsdl:message>
  <wsdl:message name="return_only">
    <wsdl:part element="tns:return_only" name="return_only" />
  </wsdl:message>
  <wsdl:message name="return_onlyResponse">
    <wsdl:part element="tns:return_onlyResponse" name="return_onlyResponse" />
  </wsdl:message>
  <wsdl:message name="return_other_class_array">
    <wsdl:part element="tns:return_other_class_array" name="return_other_class_array" />
  </wsdl:message>
  <wsdl:message name="return_other_class_arrayResponse">
    <wsdl:part element="tns:return_other_class_arrayResponse" name="return_other_class_arrayResponse" />
  </wsdl:message>
  <wsdl:message name="send_out_complex_header">
    <wsdl:part element="tns:send_out_complex_header" name="send_out_complex_header" />
  </wsdl:message>
  <wsdl:message name="send_out_complex_headerInHeaderMsg">
    <wsdl:part element="tns:InHeader" name="InHeader" />
    <wsdl:part element="tns:InTraceHeader" name="InTraceHeader" />
  </wsdl:message>
  <wsdl:message name="send_out_complex_headerOutHeaderMsg">
    <wsdl:part element="tns:OutHeader" name="OutHeader" />
    <wsdl:part element="tns:OutTraceHeader" name="OutTraceHeader" />
  </wsdl:message>
  <wsdl:message name="send_out_complex_headerResponse">
    <wsdl:part element="tns:send_out_complex_headerResponse" name="send_out_complex_headerResponse" />
  </wsdl:message>
  <wsdl:message name="send_out_header">
    <wsdl:part element="tns:send_out_header" name="send_out_header" />
  </wsdl:message>
  <wsdl:message name="send_out_headerResponse">
    <wsdl:part element="tns:send_out_headerResponse" name="send_out_headerResponse" />
  </wsdl:message>
  <wsdl:message name="soap_exception">
    <wsdl:part element="tns:soap_exception" name="soap_exception" />
  </wsdl:message>
  <wsdl:message name="soap_exceptionResponse">
    <wsdl:part element="tns:soap_exceptionResponse" name="soap_exceptionResponse" />
  </wsdl:message>
  <wsdl:message name="test_empty">
    <wsdl:part element="tns:test_empty" name="test_empty" />
  </wsdl:message>
  <wsdl:message name="test_emptyResponse">
    <wsdl:part element="tns:test_emptyResponse" name="test_emptyResponse" />
  </wsdl:message>
  <wsdl:binding name="Application" type="tns:Application">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http" />
    <wsdl:operation name="complex_return">
      <soap:operation soapAction="complex_return" style="document" />
      <wsdl:input name="complex_return">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="complex_returnResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="custom_messages">
      <soap:operation soapAction="custom_messages" style="document" />
      <wsdl:input name="custom_messages">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="getCustomMessagesMsgOut">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="do_something_else">
      <soap:operation soapAction="do_something_else" style="document" />
      <wsdl:input name="do_something_else">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="do_something_elseResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echo_any">
      <soap:operation soapAction="echo_any" style="document" />
      <wsdl:input name="echo_any">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="echo_anyResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echo_any_as_dict">
      <soap:operation soapAction="echo_any_as_dict" style="document" />
      <wsdl:input name="echo_any_as_dict">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="echo_any_as_dictResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echo_array_in_array">
      <soap:operation soapAction="echo_array_in_array" style="document" />
      <wsdl:input name="echo_array_in_array">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="echo_array_in_arrayResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echo_attachment">
      <soap:operation soapAction="echo_attachment" style="document" />
      <wsdl:input name="echo_attachment">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="echo_attachmentResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echo_attachment_array">
      <soap:operation soapAction="echo_attachment_array" style="document" />
      <wsdl:input name="echo_attachment_array">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="echo_attachment_arrayResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echo_boolean">
      <soap:operation soapAction="echo_boolean" style="document" />
      <wsdl:input name="echo_boolean">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="echo_booleanResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echo_boolean_array">
      <soap:operation soapAction="echo_boolean_array" style="document" />
      <wsdl:input name="echo_boolean_array">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="echo_boolean_arrayResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echo_date_time_array">
      <soap:operation soapAction="echo_date_time_array" style="document" />
      <wsdl:input name="echo_date_time_array">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="echo_date_time_arrayResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echo_datetime">
      <soap:operation soapAction="echo_datetime" style="document" />
      <wsdl:input name="echo_datetime">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="echo_datetimeResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echo_double">
      <soap:operation soapAction="echo_double" style="document" />
      <wsdl:input name="echo_double">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="echo_doubleResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echo_double_array">
      <soap:operation soapAction="echo_double_array" style="document" />
      <wsdl:input name="echo_double_array">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="echo_double_arrayResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echo_duration">
      <soap:operation soapAction="echo_duration" style="document" />
      <wsdl:input name="echo_duration">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="echo_durationResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echo_enum">
      <soap:operation soapAction="echo_enum" style="document" />
      <wsdl:input name="echo_enum">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="echo_enumResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echo_extension_class">
      <soap:operation soapAction="echo_extension_class" style="document" />
      <wsdl:input name="echo_extension_class">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="echo_extension_classResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echo_float">
      <soap:operation soapAction="echo_float" style="document" />
      <wsdl:input name="echo_float">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="echo_floatResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echo_float_array">
      <soap:operation soapAction="echo_float_array" style="document" />
      <wsdl:input name="echo_float_array">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="echo_float_arrayResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echo_in_complex_header">
      <soap:operation soapAction="echo_in_complex_header" style="document" />
      <wsdl:input name="echo_in_complex_header">
        <soap:body use="literal" />
        <soap:header message="tns:echo_in_complex_headerInHeaderMsg" part="InHeader" use="literal" />
        <soap:header message="tns:echo_in_complex_headerInHeaderMsg" part="InTraceHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="echo_in_complex_headerResponse">
        <soap:body use="literal" />
        <soap:header message="tns:echo_in_complex_headerOutHeaderMsg" part="OutHeader" use="literal" />
        <soap:header message="tns:echo_in_complex_headerOutHeaderMsg" part="OutTraceHeader" use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echo_in_header">
      <soap:operation soapAction="echo_in_header" style="document" />
      <wsdl:input name="echo_in_header">
        <soap:body use="literal" />
        <soap:header message="tns:InHeader" part="InHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="echo_in_headerResponse">
        <soap:body use="literal" />
        <soap:header message="tns:OutHeader" part="OutHeader" use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echo_integer">
      <soap:operation soapAction="echo_integer" style="document" />
      <wsdl:input name="echo_integer">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="echo_integerResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echo_integer_array">
      <soap:operation soapAction="echo_integer_array" style="document" />
      <wsdl:input name="echo_integer_array">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="echo_integer_arrayResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echo_nested_class">
      <soap:operation soapAction="echo_nested_class" style="document" />
      <wsdl:input name="echo_nested_class">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="echo_nested_classResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echo_nested_class_array">
      <soap:operation soapAction="echo_nested_class_array" style="document" />
      <wsdl:input name="echo_nested_class_array">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="echo_nested_class_arrayResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echo_simple_boolean_array">
      <soap:operation soapAction="echo_simple_boolean_array" style="document" />
      <wsdl:input name="echo_simple_boolean_array">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="echo_simple_boolean_arrayResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echo_simple_class">
      <soap:operation soapAction="echo_simple_class" style="document" />
      <wsdl:input name="echo_simple_class">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="echo_simple_classResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echo_simple_class_array">
      <soap:operation soapAction="echo_simple_class_array" style="document" />
      <wsdl:input name="echo_simple_class_array">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="echo_simple_class_arrayResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echo_string">
      <soap:operation soapAction="echo_string" style="document" />
      <wsdl:input name="echo_string">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="echo_stringResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echo_string_array">
      <soap:operation soapAction="echo_string_array" style="document" />
      <wsdl:input name="echo_string_array">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="echo_string_arrayResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="huge_number">
      <soap:operation soapAction="huge_number" style="document" />
      <wsdl:input name="huge_number">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="huge_numberResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="long_string">
      <soap:operation soapAction="long_string" style="document" />
      <wsdl:input name="long_string">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="long_stringResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="multi_param">
      <soap:operation soapAction="multi_param" style="document" />
      <wsdl:input name="multi_param">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="multi_paramResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="non_nillable">
      <soap:operation soapAction="non_nillable" style="document" />
      <wsdl:input name="non_nillable">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="non_nillableResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="python_exception">
      <soap:operation soapAction="python_exception" style="document" />
      <wsdl:input name="python_exception">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="python_exceptionResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="return_binary_data">
      <soap:operation soapAction="return_binary_data" style="document" />
      <wsdl:input name="return_binary_data">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="return_binary_dataResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="return_invalid_data">
      <soap:operation soapAction="return_invalid_data" style="document" />
      <wsdl:input name="return_invalid_data">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="return_invalid_dataResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="return_only">
      <soap:operation soapAction="return_only" style="document" />
      <wsdl:input name="return_only">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="return_onlyResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="return_other_class_array">
      <soap:operation soapAction="return_other_class_array" style="document" />
      <wsdl:input name="return_other_class_array">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="return_other_class_arrayResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="send_out_complex_header">
      <soap:operation soapAction="send_out_complex_header" style="document" />
      <wsdl:input name="send_out_complex_header">
        <soap:body use="literal" />
        <soap:header message="tns:send_out_complex_headerInHeaderMsg" part="InHeader" use="literal" />
        <soap:header message="tns:send_out_complex_headerInHeaderMsg" part="InTraceHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="send_out_complex_headerResponse">
        <soap:body use="literal" />
        <soap:header message="tns:send_out_complex_headerOutHeaderMsg" part="OutHeader" use="literal" />
        <soap:header message="tns:send_out_complex_headerOutHeaderMsg" part="OutTraceHeader" use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="send_out_header">
      <soap:operation soapAction="send_out_header" style="document" />
      <wsdl:input name="send_out_header">
        <soap:body use="literal" />
        <soap:header message="tns:InHeader" part="InHeader" use="literal" />
      </wsdl:input>
      <wsdl:output name="send_out_headerResponse">
        <soap:body use="literal" />
        <soap:header message="tns:OutHeader" part="OutHeader" use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="soap_exception">
      <soap:operation soapAction="soap_exception" style="document" />
      <wsdl:input name="soap_exception">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="soap_exceptionResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="test_empty">
      <soap:operation soapAction="test_empty" style="document" />
      <wsdl:input name="test_empty">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="test_emptyResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:portType name="Application">
    <wsdl:operation name="complex_return" parameterOrder="complex_return">
      <wsdl:input message="tns:complex_return" name="complex_return" />
      <wsdl:output message="tns:complex_returnResponse" name="complex_returnResponse" />
    </wsdl:operation>
    <wsdl:operation name="custom_messages" parameterOrder="custom_messages">
      <wsdl:input message="tns:custom_messages" name="custom_messages" />
      <wsdl:output message="tns:getCustomMessagesMsgOut" name="getCustomMessagesMsgOut" />
    </wsdl:operation>
    <wsdl:operation name="do_something_else" parameterOrder="do_something_else">
      <wsdl:input message="tns:do_something_else" name="do_something_else" />
      <wsdl:output message="tns:do_something_elseResponse" name="do_something_elseResponse" />
    </wsdl:operation>
    <wsdl:operation name="echo_any" parameterOrder="echo_any">
      <wsdl:input message="tns:echo_any" name="echo_any" />
      <wsdl:output message="tns:echo_anyResponse" name="echo_anyResponse" />
    </wsdl:operation>
    <wsdl:operation name="echo_any_as_dict" parameterOrder="echo_any_as_dict">
      <wsdl:input message="tns:echo_any_as_dict" name="echo_any_as_dict" />
      <wsdl:output message="tns:echo_any_as_dictResponse" name="echo_any_as_dictResponse" />
    </wsdl:operation>
    <wsdl:operation name="echo_array_in_array" parameterOrder="echo_array_in_array">
      <wsdl:input message="tns:echo_array_in_array" name="echo_array_in_array" />
      <wsdl:output message="tns:echo_array_in_arrayResponse" name="echo_array_in_arrayResponse" />
    </wsdl:operation>
    <wsdl:operation name="echo_attachment" parameterOrder="echo_attachment">
      <wsdl:input message="tns:echo_attachment" name="echo_attachment" />
      <wsdl:output message="tns:echo_attachmentResponse" name="echo_attachmentResponse" />
    </wsdl:operation>
    <wsdl:operation name="echo_attachment_array" parameterOrder="echo_attachment_array">
      <wsdl:input message="tns:echo_attachment_array" name="echo_attachment_array" />
      <wsdl:output message="tns:echo_attachment_arrayResponse" name="echo_attachment_arrayResponse" />
    </wsdl:operation>
    <wsdl:operation name="echo_boolean" parameterOrder="echo_boolean">
      <wsdl:input message="tns:echo_boolean" name="echo_boolean" />
      <wsdl:output message="tns:echo_booleanResponse" name="echo_booleanResponse" />
    </wsdl:operation>
    <wsdl:operation name="echo_boolean_array" parameterOrder="echo_boolean_array">
      <wsdl:input message="tns:echo_boolean_array" name="echo_boolean_array" />
      <wsdl:output message="tns:echo_boolean_arrayResponse" name="echo_boolean_arrayResponse" />
    </wsdl:operation>
    <wsdl:operation name="echo_date_time_array" parameterOrder="echo_date_time_array">
      <wsdl:input message="tns:echo_date_time_array" name="echo_date_time_array" />
      <wsdl:output message="tns:echo_date_time_arrayResponse" name="echo_date_time_arrayResponse" />
    </wsdl:operation>
    <wsdl:operation name="echo_datetime" parameterOrder="echo_datetime">
      <wsdl:input message="tns:echo_datetime" name="echo_datetime" />
      <wsdl:output message="tns:echo_datetimeResponse" name="echo_datetimeResponse" />
    </wsdl:operation>
    <wsdl:operation name="echo_double" parameterOrder="echo_double">
      <wsdl:input message="tns:echo_double" name="echo_double" />
      <wsdl:output message="tns:echo_doubleResponse" name="echo_doubleResponse" />
    </wsdl:operation>
    <wsdl:operation name="echo_double_array" parameterOrder="echo_double_array">
      <wsdl:input message="tns:echo_double_array" name="echo_double_array" />
      <wsdl:output message="tns:echo_double_arrayResponse" name="echo_double_arrayResponse" />
    </wsdl:operation>
    <wsdl:operation name="echo_duration" parameterOrder="echo_duration">
      <wsdl:input message="tns:echo_duration" name="echo_duration" />
      <wsdl:output message="tns:echo_durationResponse" name="echo_durationResponse" />
    </wsdl:operation>
    <wsdl:operation name="echo_enum" parameterOrder="echo_enum">
      <wsdl:input message="tns:echo_enum" name="echo_enum" />
      <wsdl:output message="tns:echo_enumResponse" name="echo_enumResponse" />
    </wsdl:operation>
    <wsdl:operation name="echo_extension_class" parameterOrder="echo_extension_class">
      <wsdl:input message="tns:echo_extension_class" name="echo_extension_class" />
      <wsdl:output message="tns:echo_extension_classResponse" name="echo_extension_classResponse" />
    </wsdl:operation>
    <wsdl:operation name="echo_float" parameterOrder="echo_float">
      <wsdl:input message="tns:echo_float" name="echo_float" />
      <wsdl:output message="tns:echo_floatResponse" name="echo_floatResponse" />
    </wsdl:operation>
    <wsdl:operation name="echo_float_array" parameterOrder="echo_float_array">
      <wsdl:input message="tns:echo_float_array" name="echo_float_array" />
      <wsdl:output message="tns:echo_float_arrayResponse" name="echo_float_arrayResponse" />
    </wsdl:operation>
    <wsdl:operation name="echo_in_complex_header" parameterOrder="echo_in_complex_header">
      <wsdl:input message="tns:echo_in_complex_header" name="echo_in_complex_header" />
      <wsdl:output message="tns:echo_in_complex_headerResponse" name="echo_in_complex_headerResponse" />
    </wsdl:operation>
    <wsdl:operation name="echo_in_header" parameterOrder="echo_in_header">
      <wsdl:input message="tns:echo_in_header" name="echo_in_header" />
      <wsdl:output message="tns:echo_in_headerResponse" name="echo_in_headerResponse" />
    </wsdl:operation>
    <wsdl:operation name="echo_integer" parameterOrder="echo_integer">
      <wsdl:input message="tns:echo_integer" name="echo_integer" />
      <wsdl:output message="tns:echo_integerResponse" name="echo_integerResponse" />
    </wsdl:operation>
    <wsdl:operation name="echo_integer_array" parameterOrder="echo_integer_array">
      <wsdl:input message="tns:echo_integer_array" name="echo_integer_array" />
      <wsdl:output message="tns:echo_integer_arrayResponse" name="echo_integer_arrayResponse" />
    </wsdl:operation>
    <wsdl:operation name="echo_nested_class" parameterOrder="echo_nested_class">
      <wsdl:input message="tns:echo_nested_class" name="echo_nested_class" />
      <wsdl:output message="tns:echo_nested_classResponse" name="echo_nested_classResponse" />
    </wsdl:operation>
    <wsdl:operation name="echo_nested_class_array" parameterOrder="echo_nested_class_array">
      <wsdl:input message="tns:echo_nested_class_array" name="echo_nested_class_array" />
      <wsdl:output message="tns:echo_nested_class_arrayResponse" name="echo_nested_class_arrayResponse" />
    </wsdl:operation>
    <wsdl:operation name="echo_simple_boolean_array" parameterOrder="echo_simple_boolean_array">
      <wsdl:input message="tns:echo_simple_boolean_array" name="echo_simple_boolean_array" />
      <wsdl:output message="tns:echo_simple_boolean_arrayResponse" name="echo_simple_boolean_arrayResponse" />
    </wsdl:operation>
    <wsdl:operation name="echo_simple_class" parameterOrder="echo_simple_class">
      <wsdl:input message="tns:echo_simple_class" name="echo_simple_class" />
      <wsdl:output message="tns:echo_simple_classResponse" name="echo_simple_classResponse" />
    </wsdl:operation>
    <wsdl:operation name="echo_simple_class_array" parameterOrder="echo_simple_class_array">
      <wsdl:input message="tns:echo_simple_class_array" name="echo_simple_class_array" />
      <wsdl:output message="tns:echo_simple_class_arrayResponse" name="echo_simple_class_arrayResponse" />
    </wsdl:operation>
    <wsdl:operation name="echo_string" parameterOrder="echo_string">
      <wsdl:input message="tns:echo_string" name="echo_string" />
      <wsdl:output message="tns:echo_stringResponse" name="echo_stringResponse" />
    </wsdl:operation>
    <wsdl:operation name="echo_string_array" parameterOrder="echo_string_array">
      <wsdl:input message="tns:echo_string_array" name="echo_string_array" />
      <wsdl:output message="tns:echo_string_arrayResponse" name="echo_string_arrayResponse" />
    </wsdl:operation>
    <wsdl:operation name="huge_number" parameterOrder="huge_number">
      <wsdl:input message="tns:huge_number" name="huge_number" />
      <wsdl:output message="tns:huge_numberResponse" name="huge_numberResponse" />
    </wsdl:operation>
    <wsdl:operation name="long_string" parameterOrder="long_string">
      <wsdl:input message="tns:long_string" name="long_string" />
      <wsdl:output message="tns:long_stringResponse" name="long_stringResponse" />
    </wsdl:operation>
    <wsdl:operation name="multi_param" parameterOrder="multi_param">
      <wsdl:input message="tns:multi_param" name="multi_param" />
      <wsdl:output message="tns:multi_paramResponse" name="multi_paramResponse" />
    </wsdl:operation>
    <wsdl:operation name="non_nillable" parameterOrder="non_nillable">
      <wsdl:input message="tns:non_nillable" name="non_nillable" />
      <wsdl:output message="tns:non_nillableResponse" name="non_nillableResponse" />
    </wsdl:operation>
    <wsdl:operation name="python_exception" parameterOrder="python_exception">
      <wsdl:input message="tns:python_exception" name="python_exception" />
      <wsdl:output message="tns:python_exceptionResponse" name="python_exceptionResponse" />
    </wsdl:operation>
    <wsdl:operation name="return_binary_data" parameterOrder="return_binary_data">
      <wsdl:input message="tns:return_binary_data" name="return_binary_data" />
      <wsdl:output message="tns:return_binary_dataResponse" name="return_binary_dataResponse" />
    </wsdl:operation>
    <wsdl:operation name="return_invalid_data" parameterOrder="return_invalid_data">
      <wsdl:input message="tns:return_invalid_data" name="return_invalid_data" />
      <wsdl:output message="tns:return_invalid_dataResponse" name="return_invalid_dataResponse" />
    </wsdl:operation>
    <wsdl:operation name="return_only" parameterOrder="return_only">
      <wsdl:input message="tns:return_only" name="return_only" />
      <wsdl:output message="tns:return_onlyResponse" name="return_onlyResponse" />
    </wsdl:operation>
    <wsdl:operation name="return_other_class_array" parameterOrder="return_other_class_array">
      <wsdl:input message="tns:return_other_class_array" name="return_other_class_array" />
      <wsdl:output message="tns:return_other_class_arrayResponse" name="return_other_class_arrayResponse" />
    </wsdl:operation>
    <wsdl:operation name="send_out_complex_header" parameterOrder="send_out_complex_header">
      <wsdl:input message="tns:send_out_complex_header" name="send_out_complex_header" />
      <wsdl:output message="tns:send_out_complex_headerResponse" name="send_out_complex_headerResponse" />
    </wsdl:operation>
    <wsdl:operation name="send_out_header" parameterOrder="send_out_header">
      <wsdl:input message="tns:send_out_header" name="send_out_header" />
      <wsdl:output message="tns:send_out_headerResponse" name="send_out_headerResponse" />
    </wsdl:operation>
    <wsdl:operation name="soap_exception" parameterOrder="soap_exception">
      <wsdl:input message="tns:soap_exception" name="soap_exception" />
      <wsdl:output message="tns:soap_exceptionResponse" name="soap_exceptionResponse" />
    </wsdl:operation>
    <wsdl:operation name="test_empty" parameterOrder="test_empty">
      <wsdl:input message="tns:test_empty" name="test_empty" />
      <wsdl:output message="tns:test_emptyResponse" name="test_emptyResponse" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:service name="InteropArray">
    <wsdl:port binding="tns:Application" name="Application">
      <soap:address location="http://localhost:9753/?wsdl" />
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="InteropClass">
    <wsdl:port binding="tns:Application" name="Application">
      <soap:address location="http://localhost:9753/?wsdl" />
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="InteropException">
    <wsdl:port binding="tns:Application" name="Application">
      <soap:address location="http://localhost:9753/?wsdl" />
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="InteropMisc">
    <wsdl:port binding="tns:Application" name="Application">
      <soap:address location="http://localhost:9753/?wsdl" />
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="InteropPrimitive">
    <wsdl:port binding="tns:Application" name="Application">
      <soap:address location="http://localhost:9753/?wsdl" />
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="InteropServiceWithComplexHeader">
    <wsdl:port binding="tns:Application" name="Application">
      <soap:address location="http://localhost:9753/?wsdl" />
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="InteropServiceWithHeader">
    <wsdl:port binding="tns:Application" name="Application">
      <soap:address location="http://localhost:9753/?wsdl" />
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
